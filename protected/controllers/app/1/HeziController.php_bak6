<?php

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 * Description of HeziController
 *
 * @author Administrator
 */
class HeziController extends CController {

    function actions() {
        parent::actions();
    }

    public function actionGetindexpic() {
        $posId = 1;
        $lvSQL = "SELECT p.img,ga.game_name,ga.game_id,ga.game_logo,ga.style,ga.game_url as url FROM `position` p left join game ga on p.game_id=ga.game_id where p.game_id>0 and cat_id=1 and p.status=1 order by id desc limit 5";
        $list = DBHelper::queryAll($lvSQL);
        foreach( $list as $key => $value ) {
            $list[$key]["mustlogin"] = "0";
            if(strpos($value['url'], 'i.7724.com') !== FALSE) {
                //$list[$key]["url"]=$value['url']."&username=".$_REQUEST['username']."&password=".$_REQUEST['password'];
                $list[$key]["mustlogin"] = "1";
            }
            $list[$key]["img"] = str_replace('img.pipaw.net', 'img.7724.com', $value['img']);
            $list[$key]["game_logo"] = 'http://img.7724.com/' . $value['game_logo'];
        }
        //$list = $this->getPositionByCatId($posId, 5);
$list=  $this->translateGame($list);

        echo json_encode($list);
    }

    /**
     * 精品推荐
     */
    public function actionGetindexjptj() {
        $posId = 3;
        $list = $this->getPositionByCatIdAndGameInfo($posId, 6);
        $list=  $this->translateGame($list);
        echo json_encode($list);
    }

    /**
     * 新游推荐
     */
    public function actionGetindexxytj() {

        $list = $this->getGameList('', 0, 6);
        $list=  $this->translateGame($list);
        echo json_encode($list);
    }

    //cat_id获得推荐位
    public function getPositionByCatId($cat_id, $pageSize = 10, $page = 1) {
        if(!$cat_id)
            return;
        $offset = ($page - 1) * $pageSize;
        $limit = " LIMIT $offset,$pageSize ";
        $order = " ORDER BY sorts DESC,id DESC ";
        $sql = "SELECT img,game_id FROM position WHERE cat_id='$cat_id' $order $limit";
        return yii::app()->db->createCommand($sql)->queryAll();
    }

    //cat_id获得推荐位游戏信息
    public function getPositionByCatIdAndGameInfo($cat_id, $pageSize = 10, $page = 1) {
        if(!$cat_id)
            return;
        $offset = ($page - 1) * $pageSize;
        $limit = " LIMIT $offset,$pageSize ";
        $order = " ORDER BY t1.sorts DESC,t1.id DESC ";
        $sql = "SELECT t1.game_id,t2.game_name,t2.game_logo,t2.game_type,t2.rand_visits,t2.style,t2.star_level,t2.tag,t2.game_url as url FROM position t1 LEFT JOIN game t2 ON t1.game_id=t2.game_id WHERE t1.cat_id='$cat_id' AND t2.status=3 $order $limit";
        $list = yii::app()->db->createCommand($sql)->queryAll();
        foreach( $list as $key => $value ) {
            if(strpos("http://", $value['game_logo']) == FALSE)
                $list[$key]["game_logo"] = "http://img.7724.com/" . $value["game_logo"];

            $list[$key]["type"] = $key % 3 + 1;
            $list[$key]["mustlogin"] = "0";
            if(strpos($value['url'], 'i.7724.com') !== FALSE) {
                $list[$key]["mustlogin"] = "1";
            }

            $lvTags = explode(',', $list[$key]["tag"]);
            $lvTMP = "";
            foreach( $lvTags as $k => $v ) {
                if(intval($v))
                    $lvTMP.=GameTagBLL::getGameTag($v) . ",";
            }
            $list[$key]["tag"] = trim($lvTMP, ',');

            $lvTags = explode(',', $list[$key]["game_type"]);
            $lvTMP = "";
            foreach( $lvTags as $k => $v ) {
                if(intval($v)) {
                    $lvTypeInfo = GameTypeBLL::getGameType($v);
                    $lvTMP.=$lvTypeInfo["name"] . ",";
                }
            }
            $list[$key]["game_type"] = trim($lvTMP, ',');
        }
        return $list;
    }

    //获取游戏数据
    public function getGameList($option = array(), $pStart = 0, $pLimit = 10, $order = "") {
        $where = " WHERE status=3 ";

        if(is_array($option) && $option != array()) {
            foreach( $option as $k => $v ) {
                if(preg_match("/ /", $k)) {
                    if(isset($v) && $v !== '')
                        $v = "'$v'";
                    $where.="AND $k $v ";
                }else {
                    $where.="AND $k='$v' ";
                }
            }
        } else
            $where.=$option;
        $limit = " LIMIT $pStart,$pLimit";
        if(!$order)
            $order = "order by time desc";
        $sql = "SELECT game_id,game_name,game_logo,game_type,rand_visits,style,star_level,tag,game_url as url FROM game $where  {$order} $limit";
        $list = yii::app()->db->createCommand($sql)->queryAll();
        foreach( $list as $key => $value ) {
            if(strpos("http://", $value['game_logo']) == FALSE)
                $list[$key]["game_logo"] = "http://img.7724.com/" . $value["game_logo"];

            $list[$key]["mustlogin"] = "0";
            if(strpos($value['url'], 'i.7724.com') !== FALSE) {
                $list[$key]["mustlogin"] = "1";
            }

            $lvTags = explode(',', $list[$key]["tag"]);

            $lvTMP = "";
            foreach( $lvTags as $k => $v ) {
                if(intval($v)) {
                    $lvTMP.=GameTagBLL::getGameTag(intval($v)) . ",";
                }
            }
            $list[$key]["tag"] = trim($lvTMP, ',');

            $lvTags = explode(',', $list[$key]["game_type"]);
            $lvTMP = "";
            foreach( $lvTags as $k => $v ) {
                if(intval($v)) {
                    $lvTypeInfo = GameTypeBLL::getGameType(intval($v));
                    $lvTMP.=$lvTypeInfo["name"] . ",";
                }
            }
            $list[$key]["game_type"] = trim($lvTMP, ',');
        }
        return $list;
    }

    /**
     * 游霸浏览器版本
     */
    public function actionVersion() {
        $lvKey = 'ubrowser:indexController::version';
        $lvKeyName = $lvKey;
        $lvCache = null; // Cache::get($lvKeyName);
// 版本号
        if(!$lvCache && $lvCache == "") {
            $webConfigInfo = DBHelper::queryRow("select * from app_config where id=1");
            $lvCache = $webConfigInfo;
//Cache::set($lvKeyName, $lvCache);
        }

// apk下载地址
        $url = "http://down3.pipaw.net/7724/7724_{$lvCache['app_version']}.apk";
        $return = array(
            'appVersionCode' => $lvCache ['version_code'],
            'appUrl' => $url,
            'content' => $lvCache ['description']
        );
        die(json_encode($return));
    }

    /**
     * 登录-1:用户不存在，或者被删除
     * -2:密码错
     * -3:安全提问错
     */
    public function actionlogin() {
        $username = $_REQUEST['username'];
        $password = $_REQUEST['password'];
        $usernick = '';
        if(!$username) {
            $result = array(
                'success' => '-4',
                'msg' => '用户名不允许为空'
            );
            echo json_encode($result);
            die();
        }
        if(!$password) {
            $result = array(
                'success' => '-5',
                'msg' => '密码不允许为空'
            );
            echo json_encode($result);
            die();
        }
        include_once 'uc_client/client.php';
        $user = uc_user_login($username, $password);
        $user = $user[0];
        if($user < 0) {
            $result ['success'] = "{$user}";
            $result ['uid'] = "-1";
            if($user == - 1) {
                $result ['msg'] = '用户不存在，或者被删除';
            } elseif($user == - 2) {
                $result ['msg'] = '密码错误';
            } elseif($user == - 3) {
                $result ['msg'] = '安全问题回答不正确';
            }
            $result['username'] = "";
            $result['nickname'] = "";
            $result['img'] = "";
        } else {
            $lvURL = "http://i.7724.com/api/SyncUser/uid/{$user}/";
            Tools::getURLContent($lvURL);

            $result ['success'] = "{$user}";
            $result ['uid'] = $user;
            $result ['msg'] = "登录成功";
            $sql = "select * from user_baseinfo where uid={$user}";
            $info = DBHelper::queryRow($sql);
            $result['username'] = $info['username'];
            $result['nickname'] = $info['nickname'];
            if($info['head_img']) {
                if(strpos($info['head_img'], 'http://') !== FALSE)
                    $result['img'] = $info['head_img'];
                else
                    $result['img'] = 'http://img.7724.com/' . $info['head_img'];
            } else
                $result['img'] = "http://www.7724.com/img/default_pic.png";

//$result ['uuid'] = md5($user . time());
            $lvTime = time();
            //$lvSign = md5("xmsb20150409{$lvTime}{$user}{$username}");
            //$result['url'] = "http://www.7724.com/?uid={$user}&username={$username}&time={$lvTime}&sign={$lvSign}";
//同步用户信息
            $lvInfo = UserBaseinfo::model()->syncUserInfo($username, TRUE);
//更新数据
            if($lvInfo) {
                $lvTMPArr = array();
                $sql = " update user_baseinfo set last_date=:last_date,last_ip=:last_ip where uid=:uid ";
                $lvTMPArr = array( ":last_date" => time(), ":uid" => $pUID, ":last_ip" => Yii::app()->request->userHostAddress );

                DBHelper::execute($sql, $lvTMPArr);
            }

//记录登录日志
            $sql = " insert into login_log(uid,username,create_time,ip) values(:uid,:username,:create_time,:ip) ";
            DBHelper::execute($sql, array(
                ":uid" => $pUID,
                ":username" => $username,
                ":create_time" => time(),
                ":ip" => Yii::app()->request->userHostAddress
            ));
        }

        echo json_encode($result);
        die();
    }

    public function actionregister() {
        $username = intval($_REQUEST ['username']);
        $password = $_REQUEST['password'];
        $code = $_REQUEST['code'];
        $guid = $_REQUEST['guid'];

        if(empty($username)) {
            echo json_encode(array(
                "success" => - 3,
                "uid" => -1,
                "msg" => "请输入手机号码",
                "username" => "",
                "nickname" => "",
                "img" => ""
            ));
            exit();
        }

        if(empty($password)) {
            echo json_encode(array(
                "success" => - 3,
                "uid" => -1,
                "msg" => "请输入用户密码",
                "username" => "",
                "nickname" => "",
                "img" => ""
            ));
            exit();
        }
        if(strlen($password) < 6) {
            echo json_encode(array(
                "success" => - 3,
                "uid" => -1,
                "msg" => "用户密码长度不得小于6位",
                "username" => "",
                "nickname" => "",
                "img" => ""
            ));
            exit();
        }
        if(empty($code)) {
            echo json_encode(array(
                "success" => - 3,
                "uid" => -1,
                "msg" => "请输入图片验证码",
                "username" => "",
                "nickname" => "",
                "img" => ""
            ));
            exit();
        }
        if(empty($guid)) {
            echo json_encode(array(
                "success" => - 3,
                "uid" => -1,
                "msg" => "参数丢失",
                "username" => "",
                "nickname" => "",
                "img" => ""
            ));
            exit();
        } else {
//验证手机验证码 
            $time = time() - 30 * 60;
            $sql = "select *  from message_log where mobile=:mobile and create_time>$time order by id desc limit 1";
            $re = DBHelper::queryRow($sql, array( ":mobile" => $username ));
            if($re && $code == $re['codevalue']) {
//$msg = "验证成功"; // 验证成功
                $status = 1;
            } else {
                $result = array(
                    "success" => - 9,
                    "uid" => -1,
                    "msg" => '验证码错误' . $code . " ==" . $re['codevalue'],
                    "username" => "",
                    "nickname" => "",
                    "img" => ""
                );
                echo json_encode($result);
                die();
            }
        }

        include_once 'uc_client/client.php';
        $user = uc_user_register($username, $password, $username . "@youxihe.com");
        if($user <= 0) {
            $uid = $result ['success'] = $user;
            if($uid == - 1) {
                $result ['msg'] = '用户名不合法';
            } elseif($uid == - 2) {
                $result ['msg'] = '包含要允许注册的词语';
            } elseif($uid == - 3) {
                $result ['msg'] = '用户名已经存在';
            } elseif($uid == - 4) {
                $result ['msg'] = '邮箱格式有误';
            } elseif($uid == - 5) {
                $result ['msg'] = '邮箱不允许注册';
            } elseif($uid == - 6) {
                $result ['msg'] = '该邮箱已经被注册';
            } else {
                $result ['msg'] = '未定义';
            }
            // $result ['msg'] = "注册失败";
            $result['username'] = "";
            $result['nickname'] = "";
            $result['img'] = '';
            echo json_encode($result);
        } else {

            $lvURL = "http://i.7724.com/api/SyncUser/uid/{$user}/";
            Tools::getURLContent($lvURL);

            $result ['success'] = "1";
            $result ['uid'] = $user;
            $result ['msg'] = "注册成功";
            $sql = "select * from user_baseinfo where uid={$user}";
            $info = DBHelper::queryRow($sql);
            $result['username'] = $info['username'];
            $result['nickname'] = $info['nickname'];
            $result['img'] = "http://www.7724.com/img/default_pic.png";

            echo json_encode($result);
        }
    }

    /*
     * 取得验证码图片
     */

    /**
     * 取得图片验证码
     */
    public function actionGetimagecode() {
        $guid = $_REQUEST["guid"];
        $where = "";
        $para = "";
        if($guid) {
            $where = " where guid=:para";
            $para = $guid;
        } else {
            echo json_encode(array( "result" => 0, "img" => "", "message" => '参数不足！' ));
            exit();
        }

        $time = time() - 60 * 30;

        $lvInfo = DBHelper::queryRow("select * from app_imgcode {$where} and createtime>={$time} order by id desc", array( ":para" => $para ));
        if($lvInfo && $lvInfo['imgcode']) {
            $lvImg = "/validataimage/" . md5($lvInfo['imgcode'] . 'choice20150601') . ".png";
            $this->createImg("/data/wwwroot/img_7724_com" . $lvImg, $lvInfo['imgcode']);
            $lvImg = "http://img.7724.com" . $lvImg;
            echo json_encode(array( "result" => 1, "img" => $lvImg, "message" => '' ));
        } else {
            $lvTime = time();
            $lvValue = rand(1000, 9999);
            $lvImg = "/validataimage/" . md5($lvValue . 'choice20150601') . ".png";
            $this->createImg("/data/wwwroot/img_7724_com" . $lvImg, $lvValue);

            $lvSQL = " INSERT INTO app_imgcode (guid,createtime,imgcode)VALUES (:guid,{$lvTime},'{$lvValue}');";
            DBHelper::execute($lvSQL, array( ":guid" => $guid ));
            $lvImg = "http://img.7724.com" . $lvImg;
            echo json_encode(array( "result" => 1, "img" => $lvImg, "message" => '' ));
        }
    }

    /**
     * 生成图片验证码
     * @param type $pFileName
     * @param type $pValue
     */
    public function createImg($pFileName, $pValue) {
        // $img = file_get_contents("http://www.7724.com/validatecode/validataimage/d652a260a7916ed4e40db6b82300fcd2.png"); 
        // file_put_contents($_SERVER ['DOCUMENT_ROOT'] ."/aa.png", $img);
        if(!file_exists($pFileName)) {
            // $state = mkdir("/data/wwwroot/img_7724_com/validataimage/", 0777);
            include $_SERVER ['DOCUMENT_ROOT'] . '/validatecode/ValidateCode.php';  //先把类包含进来，实际路径根据实际情况进行修改。
            $_vc = new ValidateCode();  //实例化一个对象
            $_vc->doimg2($pFileName, $pValue);
        }
    }

    /**
     * 取得注册短信验证码
     */
    public function actionMobilecode() {
        $username = intval($_REQUEST ['username']);
        // $password = $_REQUEST['password'];
        $code = $_REQUEST['code'];
        $guid = $_REQUEST['guid'];
        if(empty($username)) {
            echo json_encode(array(
                "result" => - 3,
                "msg" => "请输入手机号码"
            ));
            exit();
        }
//        if(empty($password)) {
//            echo json_encode(array(
//                "result" => - 3,
//                "msg" => "请输入用户密码"
//            ));
//            exit();
//        }
//        if(strlen($password) < 6) {
//            echo json_encode(array(
//                "result" => - 3,
//                "msg" => "用户密码长度不得小于6位"
//            ));
//            exit();
//        }
        if(empty($code)) {
            echo json_encode(array(
                "result" => - 3,
                "msg" => "请输入图片验证码"
            ));
            exit();
        }
        if(empty($guid)) {
            echo json_encode(array(
                "result" => - 3,
                "msg" => "参数丢失"
            ));
            exit();
        }
        $where = " where 1=1 and guid=:para2";
        $time = time() - 60 * 30;
        $lvInfo = DBHelper::queryRow("select * from app_imgcode {$where} and createtime>={$time} order by id desc", array( ":para2" => $guid ));
        if($lvInfo && $lvInfo['imgcode']) {

            if($lvInfo['imgcode'] == $code) {
                //判断手机号码存在与否        
                $lvInfo = UserBaseinfo::model()->syncUserInfo($username, true);
                //用户存在
                if($lvInfo && $lvInfo['username']) {
                    echo json_encode(array(
                        "result" => - 1,
                        "msg" => "手机号码已经被注册！"
                    ));
                    exit();
                }
                $content = rand('100000', '999999');
                $time = time();
                $sql = "select count(*) nums from message_log where mobile=:mobile and create_time+30*60>$time";
                $count = DBHelper::queryRow($sql, array( ":mobile" => $username ));

                if(intval($count ['nums']) > 0) {
                    echo json_encode(array(
                        "result" => - 1,
                        "msg" => "您已经发送验证码，30分钟内有效请勿重复发送。"
                    ));
                    exit();
                } else {
                    $codevalue = $content;
                    $content = "7724用户验证码：" . $content . ",请在30分钟内使用【7724游戏】";
                    $ip = Yii::app()->request->userHostAddress;
                    $flag = Tools::sendMsg($username, $content);

                    $sql = " insert into message_log(mobile,code,ip,create_time,send_flag,codevalue) 
					             values(:mobile,:code,:ip,:create_time,:send_flag,{$codevalue}) ";

                    DBHelper::execute($sql, array(
                        ":mobile" => $username,
                        ":code" => $content,
                        ":ip" => $ip,
                        ":create_time" => time(),
                        ":send_flag" => $flag
                    ));

                    if($flag == "ok")
                        echo json_encode(array(
                            "result" => 0,
                            "msg" => "验证码已成功发送，请及时使用！"
                        ));
                    else
                        echo json_encode(array(
                            "result" => - 2,
                            "msg" => "发送失败"
                        ));
                    exit();
                }

                echo json_encode(array( "result" => 1, "message" => $lvResult ));
            } else
                echo json_encode(array( "result" => -1, "msg" => "验证码有误！{$lvInfo['imgcode']}" ));
        } else
            echo json_encode(array( "result" => -1, "msg" => "验证码不存在！" ));
    }

    /**
     * 最新
     */
    public function actionGetTopList() {
        $lvPageIndex = intval($_REQUEST['pageindex']);
        if($lvPageIndex <= 1)
            $lvPageIndex = 1;
        $lvPageSize = 10;

        $list = $this->getGameList('', ($lvPageIndex - 1) * $lvPageSize, $lvPageSize);
        $list=  $this->translateGame($list);
        echo json_encode($list);
    }

    /**
     * 最热
     */
    public function actionGetHotList() {
        $lvPageIndex = intval($_REQUEST['pageindex']);
        if($lvPageIndex <= 1)
            $lvPageIndex = 1;
        $lvPageSize = 10;

        $list = $this->getGameList('', ($lvPageIndex - 1) * $lvPageSize, $lvPageSize, " order by rand_visits desc");
        
        echo json_encode($list);
    }

    /**
     * 游戏分类
     */
    public function actionGameType() {
        $lvList = Gamefun::gameTypes();
        $lvList = Gamefun::getGameCatCount($lvList);
        $lvResult = array();
        $index = 0;
        foreach( $lvList as $key => $value ) {
            $lvResult[$index]["id"] = $value["id"];
            $lvResult[$index]["name"] = $value["name"];
            $lvResult[$index]["pic"] = str_replace('img.pipaw.net', 'img.7724.com', $value['pic']);
            $lvResult[$index]["count"] = $value["count"];
            $index++;
        }
        echo json_encode($lvResult);
    }

    /**
     * 游戏分类最新
     */
    public function actionGetGameTypeTopList() {
        $lvPageIndex = intval($_REQUEST['pageindex']);
        $lvType = intval($_REQUEST['type']);
        if($lvPageIndex <= 1)
            $lvPageIndex = 1;
        $lvPageSize = 10;

        $list = $this->getGameList(" and game_type like '%,{$lvType},%'", ($lvPageIndex - 1) * $lvPageSize, $lvPageSize);
        $list=  $this->translateGame($list);
        echo json_encode($list);
    }

    /**
     * 游戏分类最热
     */
    public function actionGetGameTypeHotList() {
        $lvPageIndex = intval($_REQUEST['pageindex']);
        $lvType = intval($_REQUEST['type']);
        if($lvPageIndex <= 1)
            $lvPageIndex = 1;
        $lvPageSize = 10;

        $list = $this->getGameList(" and game_type like '%,{$lvType},%'", ($lvPageIndex - 1) * $lvPageSize, $lvPageSize, " order by rand_visits desc");
        $list=  $this->translateGame($list);
        echo json_encode($list);
    }

    /**
     * 搜索热词
     */
    public function actionSearchHot() {
        $cat_id = 6;
        $limit = " LIMIT 8";
        $order = " ORDER BY sorts DESC,id DESC ";
        $sql = "SELECT title FROM position WHERE cat_id='$cat_id' $order $limit";
        $lvList = yii::app()->db->createCommand($sql)->queryAll();
        echo json_encode($lvList);
    }

    //获取游戏数据
    public function actionSearchGame() {

        $keyworld = $_REQUEST['key'];
        if(!$keyworld) {
            echo '[]';
            return;
        }

        $lvPageIndex = intval($_REQUEST['pageindex']);
        if($lvPageIndex <= 1)
            $lvPageIndex = 1;
        $lvPageSize = 10;
        $pStart = ($lvPageIndex - 1) * $lvPageSize;
        $limit = " LIMIT $pStart,$lvPageSize";
        $where = " WHERE status=3 and game_name like :gamename ";
        if(!$order)
            $order = "order by time desc";
        $sql = "SELECT game_id,game_name,game_logo,game_type,rand_visits,style,star_level,tag,game_url as url FROM game $where  {$order} $limit";
        $list = DBHelper::queryAll($sql, array( ":gamename" => "%{$keyworld}%" )); //  yii::app()->db->createCommand($sql)->queryAll();
        //echo $sql;
        //print_r($list);
        foreach( $list as $key => $value ) {
            if(strpos("http://", $value['game_logo']) == FALSE)
                $list[$key]["game_logo"] = "http://img.7724.com/" . $value["game_logo"];

            $list[$key]["mustlogin"] = "0";
            if(strpos($value['url'], 'i.7724.com') !== FALSE) {
                $list[$key]["mustlogin"] = "1";
            }

            $lvTags = explode(',', $list[$key]["tag"]);

            $lvTMP = "";
            foreach( $lvTags as $k => $v ) {
                if(intval($v)) {
                    $lvTMP.=GameTagBLL::getGameTag(intval($v)) . ",";
                }
            }
            $list[$key]["tag"] = trim($lvTMP, ',');

            $lvTags = explode(',', $list[$key]["game_type"]);
            $lvTMP = "";
            foreach( $lvTags as $k => $v ) {
                if(intval($v)) {
                    $lvTypeInfo = GameTypeBLL::getGameType(intval($v));
                    $lvTMP.=$lvTypeInfo["name"] . ",";
                }
            }
            $list[$key]["game_type"] = trim($lvTMP, ',');
        }
        $list=  $this->translateGame($list);
        echo json_encode($list);
    }

    /**
     * 取得全部的游戏
     * @return type
     */
    public function actionGetAllGame() {
        $where = " WHERE status=3 ";
        $sql = "SELECT game_id,game_name FROM game $where ";
        $list = yii::app()->db->createCommand($sql)->queryAll();
        $lvResult = "";
        foreach( $list as $key => $value ) {
            if($key > 0)
                $lvResult.=",";
            $lvResult.=$value["game_name"];
        }
        $lvResult = array( "gamenams" => $lvResult );
        echo json_encode($lvResult);
    }

    /**
     * 收藏游戏,0：已经收藏，1：收藏成功 <0：收藏失败
     */
    public function actionCollectionGame() {
        $username = $_REQUEST['username'];
        $password = $_REQUEST['password'];
        $uid = 0;
        if($username && $password) {
            include_once 'uc_client/client.php';
            $user = uc_user_login($username, $password);

            if($user [0] > 0) {
                //print_r($user);
                $uid = $user[0];
                $lvUserInfo = array( 'uid' => $user[0], "username" => $user[1] ); // = UserBaseinfo::model()->findByPk($user[0]);
                //print_r($lvUserInfo);
            }
        }
        if(!$uid) {
            echo '{"result":"收藏失败"}';
            return;
        }
        $lvGameID = intval($_REQUEST['gameid']);
        if(!$lvGameID) {
            echo '{"result":"收藏失败"}';
            return;
        }
        $lvRow = DBHelper::queryRow("select * from user_collectgame where game_id={$lvGameID} and uid={$uid}");
        if($lvRow && $lvRow['uid']) {
            echo '{"result":"已经收藏"}';
            return;
        } else {
            $lvRow = DBHelper::queryRow("select game_name from game where game_id={$lvGameID} ");
            $lvInfo = new UserCollectgame();
            $lvInfo->uid = $uid;
            $lvInfo->username = $lvLoginInfo['username'];
            $lvInfo->game_id = $lvGameID;
            $lvInfo->game_name = $lvRow['game_name'];
            $lvInfo->playcount = 0;
            $lvInfo->createtime = time();
            $lvResult = $lvInfo->insert();
            echo '{"result":' . ($lvResult ? "收藏成功" : "收藏失败") . '}';
        }
    }

    /**
     * 收藏游戏
     */
    public function actionDelCollectionGame() {
        $username = $_REQUEST['username'];
        $password = $_REQUEST['password'];
        $uid = 0;
        if($username && $password) {
            include_once 'uc_client/client.php';
            $user = uc_user_login($username, $password);

            if($user [0] > 0) {
                //print_r($user);
                $uid = $user[0];
                $lvUserInfo = array( 'uid' => $user[0], "username" => $user[1] ); // = UserBaseinfo::model()->findByPk($user[0]);
                //print_r($lvUserInfo);
            }
        }
        if(!$uid) {
            echo '{"result":"删除失败"}';
            return;
        }
        $lvGameID = intval($_REQUEST['gameid']);
        if(!$lvGameID) {
            echo '{"result":"删除失败"}';
            return;
        }
        $lvRow = DBHelper::execute("delete from user_collectgame where game_id={$lvGameID} and uid={$uid}");

        echo '{"result":' . ($lvRow ? "删除成功" : "删除失败") . '}';
    }

    //获取收藏游戏数据
    public function actionCollectionGameList() {
        $username = $_REQUEST['username'];
        $password = $_REQUEST['password'];
        $uid = 0;
        if($username && $password) {
            include_once 'uc_client/client.php';
            $user = uc_user_login($username, $password);

            if($user [0] > 0) {
                //print_r($user);
                $uid = $user[0];
                $lvUserInfo = array( 'uid' => $user[0], "username" => $user[1] ); // = UserBaseinfo::model()->findByPk($user[0]);
                //print_r($lvUserInfo);
            }
        }
        if(!$uid) {
            echo "-1";
            return;
        }

        $lvPageIndex = intval($_REQUEST['pageindex']);
        if($lvPageIndex <= 1)
            $lvPageIndex = 1;
        $lvPageSize = 10;

        $pStart = ($lvPageIndex - 1) * $lvPageSize;
        $pLimit = 10;
        $order = "";
        $where = " WHERE c.uid={$uid} ";
        $limit = " LIMIT $pStart,$pLimit";
        if(!$order)
            $order = "order by time desc";
        $sql = "select g.game_id,g.game_name,game_logo,game_type,rand_visits,style,star_level,tag,game_url as url from user_collectgame c left join game g on c.game_id=g.game_id  $where  order by c.createtime desc $limit";
        $list = yii::app()->db->createCommand($sql)->queryAll();
        foreach( $list as $key => $value ) {
            if(strpos("http://", $value['game_logo']) == FALSE)
                $list[$key]["game_logo"] = "http://img.7724.com/" . $value["game_logo"];

            $list[$key]["mustlogin"] = "0";
            if(strpos($value['url'], 'i.7724.com') !== FALSE) {
                $list[$key]["mustlogin"] = "1";
            }

            $lvTags = explode(',', $list[$key]["tag"]);

            $lvTMP = "";
            foreach( $lvTags as $k => $v ) {
                if(intval($v)) {
                    $lvTMP.=GameTagBLL::getGameTag(intval($v)) . ",";
                }
            }
            $list[$key]["tag"] = trim($lvTMP, ',');

            $lvTags = explode(',', $list[$key]["game_type"]);
            $lvTMP = "";
            foreach( $lvTags as $k => $v ) {
                if(intval($v)) {
                    $lvTypeInfo = GameTypeBLL::getGameType(intval($v));
                    $lvTMP.=$lvTypeInfo["name"] . ",";
                }
            }
            $list[$key]["game_type"] = trim($lvTMP, ',');
        }
        $list=  $this->translateGame($list);
        echo json_encode($list);
    }

    /**
     * 获取游戏数据
     * @return type
     */
    public function actionGetGameInfo() {
        $where = " WHERE game_id=" . intval($_REQUEST['gameid']);
        $sql = "SELECT game_id,game_name,game_logo,game_type,rand_visits,style,star_level,tag,game_url as url FROM game $where  ";
        $value = yii::app()->db->createCommand($sql)->queryRow();
        // foreach( $list as $key => $value ) {
        if(strpos("http://", $value['game_logo']) == FALSE)
            $value["game_logo"] = "http://img.7724.com/" . $value["game_logo"];

        $list[$key]["mustlogin"] = "0";
        if(strpos($value['url'], 'i.7724.com') !== FALSE) {
            $value["mustlogin"] = "1";
        }

        $lvTags = explode(',', $value["tag"]);

        $lvTMP = "";
        foreach( $lvTags as $k => $v ) {
            if(intval($v)) {
                $lvTMP.=GameTagBLL::getGameTag(intval($v)) . ",";
            }
        }
        $value["tag"] = trim($lvTMP, ',');

        $lvTags = explode(',', $value["game_type"]);
        $lvTMP = "";
        foreach( $lvTags as $k => $v ) {
            if(intval($v)) {
                $lvTypeInfo = GameTypeBLL::getGameType(intval($v));
                $lvTMP.=$lvTypeInfo["name"] . ",";
            }
        }
        $value["game_type"] = trim($lvTMP, ',');
        // } 
        //print_r($value);
        $value = $this->translateGame($value, FALSE);

        echo json_encode($value);
    }

    /**
     * 第三方注册登陆
     */
    public function actionOauth() {
        $lvType = intval($_REQUEST['type']);
        $lvOpenID = urlencode($_REQUEST['openid']);
        $lvNickName = urlencode($_REQUEST['nickname']);
        $lvImg = urlencode($_REQUEST['img']);
        $lvSex = intval($_REQUEST ['sex']) ? intval($_REQUEST ['sex']) : 0;
        $lvURL = "http://i.7724.com/user/thirdapilogin?type={$lvType}&openid={$lvOpenID}&nickname={$lvNickName}&img={$lvImg}&sex={$lvSex}";
        // echo $lvURL;
        $lvResult = Tools::getURLContent($lvURL);

        echo $lvResult;
    }

    /**
     * 转换游戏列表
     * @param type $pList
     * @param type $pIsList
     */
    public function translateGame($pList, $pIsList = TRUE) {
        $lvCocosGame = GameBLL::getGameCocosList();
        //print_r($lvCocosGame);
        if($pIsList) {
            foreach( $pList as $key => $value ) {
                $lvCoCos = $lvCocosGame[$pList[$key]['game_id']];
                if($lvCoCos) {
                    $pList[$key]["gamekey"] = $lvCoCos['gamekey'];
                    $pList[$key]["backimg"] = $lvCoCos['backimg'] ? "http://img.7724.com/" . $lvCoCos['backimg'] : "";
                    $pList[$key]["isdownbackimg"] = $lvCoCos['isdownbackimg'];
                    $pList[$key]["isdownbackmusic"] = $lvCoCos['isdownbackmusic'];
                }
                else {
                     $pList[$key]["gamekey"] ="";
                    $pList[$key]["backimg"] = "";
                    $pList[$key]["isdownbackimg"] ="0";
                    $pList[$key]["isdownbackmusic"] = "0";
                }
            }
        } else {
            $lvCoCos = $lvCocosGame[$pList['game_id']];
            if($lvCoCos) {
                $pList["gamekey"] = $lvCoCos['gamekey'];
                $pList["backimg"] = $lvCoCos['backimg'] ? "http://img.7724.com/" . $lvCoCos['backimg'] : "";
                $pList["isdownbackimg"] = $lvCoCos['isdownbackimg'];
                $pList["isdownbackmusic"] = $lvCoCos['isdownbackmusic'];
            }
            else {
                     $pList[$key]["gamekey"] ="";
                    $pList[$key]["backimg"] = "";
                    $pList[$key]["isdownbackimg"] ="0";
                    $pList[$key]["isdownbackmusic"] = "0";
                }
        }

        return $pList;
    }

}
